usethis::use_r('generate_data')
install.packages("usethis")
install.packages('devtools')
usethis::use_r('generate_data')
usethis::use_r('get_best_gep')
devtools::install()
?get_best_gep
devtools::document()
devtools::install()
devtools::document()
?get_best_gep
?generate_dat
?generate_data
usthis::use_r('make_scenarios')
usethis::use_r('make_scenarios')
devtools::document()
?make_scenarios
devtools::document()
?make_scenarios
usethis::use_r('utils')
?make_scenarios
devtools::document()
?make_scenarios
usethis::use_r("get_diff_io_hrs")
usethis::use_r("utils_analysis")
usethis::use_r("validate_cox_in_scenarios")
load_all()
library('devtools')
load_all()
load_all()
devtools::document()
params <- list(
# parameters for marker blocks
marker_blocksizes = c(10),
mus_NB = c(0),
mu_diffs = c(2),
sds_B = c(0.4),
sds_NB = c(0.4),
rhos_B = c(0.8),
rhos_NB = c(0.8),
gene_effects = c("AND"),
# parameters for nonmarker blocks
mu_nonmarker = 0,
sds_nonmarker = c(0.4),
rhos_nonmarker = c(0.8),
# parameters for gep
n_pts = 1000,
n_genes = 100,
fraction_pts_benefit = 0.5,
fraction_tx_1 = 0.5,
fraction_censored = 0,
noise = list(type = "random", mean = 0, sd = 1),
# parameters for survival
surv_distribution = "Weibull",
surv_d_params = list(shape=1.5),
scale_NB0 = 10,
HR_B0_NB0 = 0.7,
HR_NB1_NB0 = 0.9,
HR_B1_NB0 = 0.5)
load_all()
generate_data(params)
use_r(class_block)
use_r('class_block')
use_r('class_checker')
use_r('class_geneEffectBlock')
use_r('class_gep')
load_all()
install.packages('R6Class')
install.packages('R6')
load_all()
devtools::document()
load_all()
load_all()
load_all()
load_all()
load_all()
load_all()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
load_all()
warnings()
load_all()
warnings()
devtools::document()
warnings()
devtools::document()
load_all()
generate_data(params)
use_r('0classes')
devtools::document()
load_all()
generate_data(params)
?generate_data
devtools::document()
?generate_data
devtools::document()
?generate_data
devtools::document()
?generate_data
n_repeats = 2
gep_n_times <- get_best_gep(params, n_repeats = n_repeats, threshold = 0.03)
gep_n_times$p
gep_n_times$best_gep
gep_n_times <- get_best_gep(params, n_repeats = 30, threshold = 0.03)
gep_n_times$best_gep
best_gep <- gep_n_times$best_gep
best_output_hrs <- gep_n_times$best_output_hs
diff_io_hrs <- get_diff_io_hrs(input_hrs = c(params$HR_B0_NB0, params$HR_B1_NB0,
params$HR_NB1_NB0),
output_hrs = best_output_hrs,
output_format = 'table')
diff_io_hrs
test_ph(best_gep)
hrs <- get_hr_table(best_gep, output_format = 'per_group', mytitle)
myfilename = "example"
mytitle = "Best dataset (example)"
hrs <- get_hr_table(best_gep, output_format = 'per_group', mytitle)
plot_hazards(best_gep, shape = params$surv_d_params$shape, mytitle = "Hazards")
survplot <- plot_km_curve(best_gep, best_output_hrs, mytitle = mytitle)
survplot <- plot_surv_curve(best_gep, best_output_hrs, mytitle = mytitle)
survplot
nonmarker_genes <- best_gep[,sum(params$marker_blocksizes):params$n_genes]
check_cor(nonmarker_genes, mytitle = mytitle)
scenarios <- list(
mu_diffs = c(1, 5),
gene_effects = c('AND', 'OR', "no_pattern")
)
params <- list(
# parameters for marker blocks
marker_blocksizes = c(10),
mus_NB = c(0),
mu_diffs = c(2),
sds_B = c(0.4),
sds_NB = c(0.4),
rhos_B = c(0.8),
rhos_NB = c(0.8),
gene_effects = c("AND"),
# parameters for nonmarker blocks
mu_nonmarker = 0,
sds_nonmarker = c(0.4),
rhos_nonmarker = c(0.8),
# parameters for gep
n_pts = 1000,
n_genes = 100,
fraction_pts_benefit = 0.5,
fraction_tx_1 = 0.5,
fraction_censored = 0,
noise = list(type = "random", mean = 0, sd = 0),
# parameters for survival
surv_distribution = "Weibull",
surv_d_params = list(shape=1.5),
scale_NB0 = 10,
HR_B0_NB0 = 0.8,
HR_NB1_NB0 = 0.7,
HR_B1_NB0 = 0.5)
scenario_params_names <- make_scenarios(scenarios, params)
scenario_params_list <- scenario_params_names$params_list
scenario_names <- scenario_params_names$sc_names
scenario_names
scores <- do_pca_in_scenarios(scenario_names,
scenarios = scenario_params_list,
nrow = 2)
library(gridExtra)
scores <- do_pca_in_scenarios(scenario_names,
scenarios = scenario_params_list,
nrow = 2)
devtools::document()
load_all()
scores <- do_pca_in_scenarios(scenario_names,
scenarios = scenario_params_list,
nrow = 2)
params <- list(
# parameters for marker blocks
marker_blocksizes = c(10),
mus_NB = c(0),
mu_diffs = c(2),
sds_B = c(0.4),
sds_NB = c(0.4),
rhos_B = c(0.8),
rhos_NB = c(0.8),
gene_effects = c("AND"),
# parameters for nonmarker blocks
mu_nonmarker = 0,
sds_nonmarker = c(0.4),
rhos_nonmarker = c(0.8),
# parameters for gep
n_pts = 1000,
n_genes = 100,
fraction_pts_benefit = 0.5,
fraction_tx_1 = 0.5,
fraction_censored = 0,
noise = list(type = "random", mean = 0, sd = 1),
# parameters for survival
surv_distribution = "Weibull",
surv_d_params = list(shape=1.5),
scale_NB0 = 10,
HR_B0_NB0 = 0.7,
HR_NB1_NB0 = 0.9,
HR_B1_NB0 = 0.5)
params <- list(
# parameters for marker blocks
marker_blocksizes = c(5, 5),
mus_NB = c(0, 0),
mu_diffs = c(1, 2),
sds_B = c(0.4, 0.4),
sds_NB = c(0.4, 0.4),
rhos_B = c(0.8, 0.8),
rhos_NB = c(0.8, 0.8),
gene_effects = c("AND", "no_pattern"),
# parameters for nonmarker blocks
mu_nonmarker = 0,
sds_nonmarker = c(0.3, 0.6),
rhos_nonmarker = c(0.8, 0.8),
# parameters for gep
n_pts = 1000,
n_genes = 100,
fraction_pts_benefit = 0.5,
fraction_tx_1 = 0.5,
fraction_censored = 0,
noise = list(type = "random", mean = 0, sd = 1),
# parameters for survival
surv_distribution = "Weibull",
surv_d_params = list(shape=1.5),
scale_NB0 = 10,
HR_B0_NB0 = 0.7,
HR_NB1_NB0 = 0.8,
HR_B1_NB0 = 0.5)
gep_hrs <- generate_data(params)
load_all()
library('devtools')
load_all()
gep_hrs <- generate_data(params)
gep <- gep_hrs$gep
hrs <- gep_hrs$hrs
hrs
n_repeats <- 100
gep_n_times <- get_best_gep(params, n_repeats = n_repeats, threshold = 0.03)
# Plot
gep_n_times_plot <- gep_n_times$p
# Extract the best gep:
best_gep <- gep_n_times$best_gep
best_output_hrs <- gep_n_times$best_output_hs
best_output_hrs
# Check difference between input and estimated HRs
diff_io_hrs <- get_diff_io_hrs(input_hrs = c(params$HR_B0_NB0, params$HR_B1_NB0,
params$HR_NB1_NB0),
output_hrs = best_output_hrs,
output_format = 'table')
diff_io_hrs_kable <- kable(diff_io_hrs, format='html',
caption="Input and output HRs ") %>%
kable_styling(bootstrap_options = "striped",
full_width = F, position = "center")
myfilename = "example"
mytitle = "Best dataset (example)"
test_ph(best_gep)
hrs <- get_hr_table(best_gep, output_format = 'per_group', mytitle)
hrs
plot_hazards(best_gep, shape = params$surv_d_params$shape, mytitle = "Hazards")
survplot <- plot_surv_curve(best_gep, best_output_hrs, mytitle = mytitle)
survplot
nonmarker_genes <- best_gep[,sum(params$marker_blocksizes):params$n_genes]
check_cor(nonmarker_genes, mytitle = mytitle)
scenarios <- list(
mu_diffs = c(1, 5),
gene_effects = c('AND', 'OR', "no_pattern")
)
params <- list(
# parameters for marker blocks
marker_blocksizes = c(10),
mus_NB = c(0),
mu_diffs = c(2),
sds_B = c(0.4),
sds_NB = c(0.4),
rhos_B = c(0.8),
rhos_NB = c(0.8),
gene_effects = c("AND"),
# parameters for nonmarker blocks
mu_nonmarker = 0,
sds_nonmarker = c(0.4),
rhos_nonmarker = c(0.8),
# parameters for gep
n_pts = 1000,
n_genes = 100,
fraction_pts_benefit = 0.5,
fraction_tx_1 = 0.5,
fraction_censored = 0,
noise = list(type = "random", mean = 0, sd = 0),
# parameters for survival
surv_distribution = "Weibull",
surv_d_params = list(shape=1.5),
scale_NB0 = 10,
HR_B0_NB0 = 0.8,
HR_NB1_NB0 = 0.7,
HR_B1_NB0 = 0.5)
scenario_params_names <- make_scenarios(scenarios, params)
scenario_params_list <- scenario_params_names$params_list
scenario_names <- scenario_params_names$sc_names
scenario_names
scores <- do_pca_in_scenarios(scenario_names,
scenarios = scenario_params_list,
nrow = 2)
km_sc_plot <- do_km_in_scenarios(scenario_names = scenario_names,
scenarios = scenario_params_list,
n_repeats = 100,
nrows = 3)
km_sc_plot <- do_km_in_scenarios(scenario_names = scenario_names,
scenarios = scenario_params_list,
n_repeats = 2,
nrows = 3)
km_sc_plot
cox_pred_hrs <- validate_cox_in_scenarios(scenario_names = scenario_names,
scenarios = scenario_params_list,
n_repeats = 2)
cox_pred_hrs
devtools::install()
library(SynTruthPkg)
library(kableExtra)
.libPaths()
usethis::use_package('R6')
usethis::use_package('mvtnorm')
usethis::use_package('rockchalk')
usethis::use_package('ggplot2')
usethis::use_package('reshape2')
usethis::use_package('factoextra')
usethis::use_package('cluster')
usethis::use_package('plotly')
usethis::use_package('ggfortify')
usethis::use_package('factoextra')
usethis::use_package('gridExtra')
usethis::use_package('magrittr')
usethis::use_package('survival')
usethis::use_package('gtsummary')
usethis::use_package('gt')
usethis::use_package('tidyr')
install.packages("renv")
renv::status()
?renv::status()
renv::restore()
install.packages("factoextra ")
install.packages("factoextra")
renv::status()
install.packages("ggfortify")
install.packages("gt")
renv::status()
install.packages("gtsummary")
renv::status()
install.packages("kableExtra")
renv::status()
install.packages("plotly")
install.packages("rockchalk")
renv::status()
renv::snapshot()
install.packages("MatrixModels")
renv::snapshot()
renv::status()
library(SynTruthPkg)
renv::status()
